"use strict";(self.webpackChunkcircuits=self.webpackChunkcircuits||[]).push([[51362],{3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>f});var a=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var c=a.createContext({}),p=function(e){var t=a.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},d=function(e){var t=p(e.components);return a.createElement(c.Provider,{value:t},e.children)},s="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,c=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),s=p(n),m=r,f=s["".concat(c,".").concat(m)]||s[m]||u[m]||i;return n?a.createElement(f,o(o({ref:t},d),{},{components:n})):a.createElement(f,o({ref:t},d))}));function f(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,o=new Array(i);o[0]=m;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l[s]="string"==typeof e?e:r,o[1]=l;for(var p=2;p<i;p++)o[p]=n[p];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},65847:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>o,default:()=>u,frontMatter:()=>i,metadata:()=>l,toc:()=>p});var a=n(87462),r=(n(67294),n(3905));const i={sidebar_position:80,tags:["._tags"]},o="Collision Data Get Normal",l={unversionedId:"documentation/chips/ced470f8-dd9d-4e67-a654-7c7e1a3e7819",id:"documentation/chips/ced470f8-dd9d-4e67-a654-7c7e1a3e7819",title:"Collision Data Get Normal",description:'Gets unit vector specifying the direction of an object/player from center specified in "Overlap Sphere" chip.',source:"@site/docs/documentation/chips/ced470f8-dd9d-4e67-a654-7c7e1a3e7819.md",sourceDirName:"documentation/chips",slug:"/documentation/chips/ced470f8-dd9d-4e67-a654-7c7e1a3e7819",permalink:"/docs/documentation/chips/ced470f8-dd9d-4e67-a654-7c7e1a3e7819",draft:!1,editUrl:"https://github.com/FunnPunn/RecRoom-Circuits/docs/documentation/chips/ced470f8-dd9d-4e67-a654-7c7e1a3e7819.md",tags:[{label:"._tags",permalink:"/docs/tags/tags"}],version:"current",sidebarPosition:80,frontMatter:{sidebar_position:80,tags:["._tags"]},sidebar:"tutorialSidebar",previous:{title:"Collision Data Get Distance",permalink:"/docs/documentation/chips/c3fc963c-6d73-4d88-9c9b-95e9faae219f"},next:{title:"Collision Data Get Object",permalink:"/docs/documentation/chips/8c8931da-1a8e-4164-a3a5-0f68db8cafb5"}},c={},p=[{value:"Gets unit vector specifying the direction of an object/player from center specified in &quot;Overlap Sphere&quot; chip.",id:"gets-unit-vector-specifying-the-direction-of-an-objectplayer-from-center-specified-in-overlap-sphere-chip",level:3},{value:"Inputs:",id:"inputs",level:2},{value:"Outputs:",id:"outputs",level:2},{value:"Info:",id:"info",level:2}],d={toc:p},s="wrapper";function u(e){let{components:t,...n}=e;return(0,r.kt)(s,(0,a.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"collision-data-get-normal"},"Collision Data Get Normal"),(0,r.kt)("h3",{id:"gets-unit-vector-specifying-the-direction-of-an-objectplayer-from-center-specified-in-overlap-sphere-chip"},'Gets unit vector specifying the direction of an object/player from center specified in "Overlap Sphere" chip.'),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},(0,r.kt)("img",{parentName:"th",src:"https://images-ext-2.discordapp.net/external/MPmIaQzlEPmgGWlgi-WxBBXt0Bjv_zWPkg1y1f_sy3s/https/www.recroomcircuits.com/image/circuit/absolute-value?width=206&height=108",alt:null}))))),(0,r.kt)("h2",{id:"inputs"},"Inputs:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Port Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Port Type"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Target"),(0,r.kt)("td",{parentName:"tr",align:null},"collision data")))),(0,r.kt)("h2",{id:"outputs"},"Outputs:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Port Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Port Type"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Normal"),(0,r.kt)("td",{parentName:"tr",align:null},"vector3")))),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Property"),(0,r.kt)("th",{parentName:"tr",align:null},"Value"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Is Trolling Risk?"),(0,r.kt)("td",{parentName:"tr",align:null},"No.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Is Beta?"),(0,r.kt)("td",{parentName:"tr",align:null},"No.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Chip UUID"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"ced470f8-dd9d-4e67-a654-7c7e1a3e7819"))))),(0,r.kt)("h2",{id:"info"},"Info:"),(0,r.kt)("p",null,"._extrainfo"))}u.isMDXComponent=!0}}]);